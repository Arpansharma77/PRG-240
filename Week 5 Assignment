import React, { useState } from 'react';
import { ShoppingCart, Leaf, Mail, Lock, Eye, EyeOff, Globe, Database, User, Calendar, Key, CheckCircle, Send, Clock, Code } from 'lucide-react';

export default function LocalhostDemo() {
  const [currentPage, setCurrentPage] = useState('postman');
  const [showPassword, setShowPassword] = useState(false);
  const [showConfirmPassword, setShowConfirmPassword] = useState(false);
  const [users, setUsers] = useState([
    {
      id: 7,
      firstName: 'Nischal',
      lastName: 'Test',
      email: 'nischal@example.com',
      userType: 'customer',
      token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI3IiwibmFtZSI6Ik5pc2NoYWwiLCJlbWFpbCI6Im5pc2NoYWxAZXhhbXBsZS5jb20iLCJpYXQiOjE2OTc1NTk2MDB9.eEE0Bx1rCJYDmLsNziE0PwPy3qyZ0UfFHfhzyv7A9g',
      registeredAt: '2025-10-16 14:30:00',
      status: 'Active'
    }
  ]);
  const [apiRequest, setApiRequest] = useState({
    firstName: 'Nischal',
    lastName: 'Test',
    email: 'nischal@example.com',
    password: 'regular123',
    userType: 'customer'
  });
  const [apiResponse, setApiResponse] = useState(null);
  const [showResponse, setShowResponse] = useState(false);
  const [formData, setFormData] = useState({
    firstName: '',
    lastName: '',
    email: '',
    password: '',
    confirmPassword: '',
    userType: 'Customer'
  });
  const [currentUser, setCurrentUser] = useState(null);

  const generateToken = (userId, name, email) => {
    const header = btoa(JSON.stringify({ alg: "HS256", typ: "JWT" }));
    const payload = btoa(JSON.stringify({ 
      sub: userId.toString(), 
      name: name, 
      email: email,
      iat: Math.floor(Date.now() / 1000)
    }));
    const signature = btoa(Math.random().toString(36).substring(2, 15));
    return `${header}.${payload}.${signature}`;
  };

  const handleApiSend = () => {
    const newUser = {
      id: users.length + 1,
      firstName: apiRequest.firstName,
      lastName: apiRequest.lastName,
      email: apiRequest.email,
      userType: apiRequest.userType,
      token: generateToken(users.length + 1, apiRequest.firstName, apiRequest.email),
      registeredAt: new Date().toISOString().slice(0, 19).replace('T', ' '),
      status: 'Active'
    };
    
    setUsers([...users, newUser]);
    setApiResponse({
      data: {
        id: newUser.id,
        firstName: newUser.firstName,
        lastName: newUser.lastName,
        email: newUser.email,
        password: null,
        userType: newUser.userType,
        token: newUser.token
      },
      success: true,
      message: "User registered successfully"
    });
    setShowResponse(true);
  };

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleSignup = () => {
    if (formData.password !== formData.confirmPassword) {
      alert('Passwords do not match!');
      return;
    }
    
    const newUser = {
      id: users.length + 1,
      firstName: formData.firstName,
      lastName: formData.lastName,
      email: formData.email,
      userType: formData.userType,
      token: generateToken(users.length + 1, formData.firstName, formData.email),
      registeredAt: new Date().toISOString().slice(0, 19).replace('T', ' '),
      status: 'Active'
    };
    
    setUsers([...users, newUser]);
    setCurrentUser(newUser);
    setCurrentPage('login');
  };

  const handleLogin = () => {
    const user = users.find(u => u.email === formData.email);
    if (user) {
      setCurrentUser(user);
      setCurrentPage('dashboard');
    }
  };

  // Browser Chrome Bar (Windows Style)
  const BrowserBar = ({ url }) => (
    <div className="bg-white border-b border-gray-300">
      <div className="bg-gray-100 px-4 py-2 flex items-center justify-between">
        <div className="flex items-center gap-2">
          <span className="text-xs text-gray-600">← → ⟳</span>
        </div>
        <div className="flex-1 mx-4 bg-white rounded border border-gray-300 px-3 py-1.5 flex items-center gap-2">
          <Globe className="w-4 h-4 text-gray-500" />
          <span className="text-sm text-gray-700 font-mono">{url}</span>
        </div>
        <div className="flex gap-2">
          <button className="w-8 h-6 hover:bg-gray-200 flex items-center justify-center text-gray-600">−</button>
          <button className="w-8 h-6 hover:bg-gray-200 flex items-center justify-center text-gray-600">□</button>
          <button className="w-8 h-6 hover:bg-red-500 hover:text-white flex items-center justify-center text-gray-600">✕</button>
        </div>
      </div>
    </div>
  );

  // Postman API Testing Page
  const PostmanPage = () => (
    <div className="min-h-screen bg-gray-100 p-8">
      <div className="max-w-7xl mx-auto">
        <div className="bg-white rounded-lg shadow-xl">
          {/* Header */}
          <div className="bg-orange-500 px-6 py-3 flex items-center justify-between">
            <div className="flex items-center gap-3">
              <div className="text-white text-xl font-bold">Token</div>
            </div>
            <div className="flex gap-2">
              <button className="px-4 py-1.5 text-white text-sm hover:bg-orange-600 rounded">Save</button>
              <button className="px-4 py-1.5 text-white text-sm hover:bg-orange-600 rounded">Share</button>
              <button 
                onClick={() => setCurrentPage('signup')}
                className="px-4 py-1.5 bg-green-600 text-white text-sm hover:bg-green-700 rounded"
              >
                Go to Signup
              </button>
            </div>
          </div>

          {/* Request Section */}
          <div className="p-6">
            <div className="flex gap-2 mb-4">
              <select className="px-4 py-2 bg-orange-500 text-white rounded font-semibold">
                <option>POST</option>
              </select>
              <input 
                type="text" 
                value="http://localhost:8080/SpringMvcHelloWorld/api/users/register"
                readOnly
                className="flex-1 px-4 py-2 border border-gray-300 rounded text-sm font-mono"
              />
              <button 
                onClick={handleApiSend}
                className="px-8 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 font-semibold flex items-center gap-2"
              >
                Send
                <Send className="w-4 h-4" />
              </button>
            </div>

            {/* Tabs */}
            <div className="border-b border-gray-200 mb-4">
              <div className="flex gap-6 text-sm">
                <button className="pb-2 text-gray-500">Params</button>
                <button className="pb-2 text-gray-500">Authorization</button>
                <button className="pb-2 text-gray-500">Headers (9)</button>
                <button className="pb-2 border-b-2 border-orange-500 text-orange-500 font-semibold">Body</button>
                <button className="pb-2 text-gray-500">Scripts</button>
                <button className="pb-2 text-gray-500">Settings</button>
              </div>
            </div>

            {/* Body Options */}
            <div className="mb-4 flex gap-4 text-sm">
              <label className="flex items-center gap-2">
                <input type="radio" name="bodyType" />
                <span>none</span>
              </label>
              <label className="flex items-center gap-2">
                <input type="radio" name="bodyType" />
                <span>form-data</span>
              </label>
              <label className="flex items-center gap-2">
                <input type="radio" name="bodyType" />
                <span>x-www-form-urlencoded</span>
              </label>
              <label className="flex items-center gap-2">
                <input type="radio" name="bodyType" checked />
                <span className="font-semibold">raw</span>
              </label>
              <label className="flex items-center gap-2">
                <input type="radio" name="bodyType" />
                <span>binary</span>
              </label>
              <label className="flex items-center gap-2">
                <input type="radio" name="bodyType" />
                <span>GraphQL</span>
              </label>
              <select className="ml-auto text-blue-600 font-semibold">
                <option>JSON</option>
              </select>
            </div>

            {/* Request Body */}
            <div className="bg-gray-50 rounded border border-gray-200 p-4 font-mono text-sm mb-6">
              <div className="text-gray-600">
                <div className="flex"><span className="text-gray-400 w-8">1</span>{'{'}</div>
                <div className="flex"><span className="text-gray-400 w-8">2</span>  <span className="text-orange-600">"firstName"</span>: <span className="text-green-600">"{apiRequest.firstName}"</span>,</div>
                <div className="flex"><span className="text-gray-400 w-8">3</span>  <span className="text-orange-600">"lastName"</span>: <span className="text-green-600">"{apiRequest.lastName}"</span>,</div>
                <div className="flex"><span className="text-gray-400 w-8">4</span>  <span className="text-orange-600">"email"</span>: <span className="text-green-600">"{apiRequest.email}"</span>,</div>
                <div className="flex"><span className="text-gray-400 w-8">5</span>  <span className="text-orange-600">"password"</span>: <span className="text-green-600">"{apiRequest.password}"</span>,</div>
                <div className="flex"><span className="text-gray-400 w-8">6</span>  <span className="text-orange-600">"userType"</span>: <span className="text-green-600">"{apiRequest.userType}"</span></div>
                <div className="flex"><span className="text-gray-400 w-8">7</span>{'}'}</div>
              </div>
            </div>

            {/* Response Section */}
            {showResponse && (
              <div>
                <div className="flex items-center justify-between mb-4">
                  <div className="flex gap-6 text-sm border-b border-gray-200 pb-2">
                    <button className="border-b-2 border-orange-500 text-orange-500 font-semibold">Body</button>
                    <button className="text-gray-500">Cookies</button>
                    <button className="text-gray-500">Headers (5)</button>
                    <button className="text-gray-500">Test Results</button>
                    <Clock className="w-4 h-4 text-gray-400" />
                  </div>
                  <div className="flex items-center gap-4">
                    <span className="text-green-600 font-semibold">200 OK</span>
                    <span className="text-gray-500 text-sm">1.02 s</span>
                    <span className="text-gray-500 text-sm">519 B</span>
                  </div>
                </div>

                <div className="flex gap-2 mb-2 text-sm">
                  <button className="px-3 py-1 bg-gray-100 rounded">JSON</button>
                  <button className="px-3 py-1 hover:bg-gray-100 rounded">Preview</button>
                  <button className="px-3 py-1 hover:bg-gray-100 rounded">Visualize</button>
                </div>

                {/* Response Body */}
                <div className="bg-gray-50 rounded border border-gray-200 p-4 font-mono text-sm max-h-96 overflow-auto">
                  <div className="text-gray-600">
                    <div className="flex"><span className="text-gray-400 w-8">1</span>{'{'}</div>
                    <div className="flex"><span className="text-gray-400 w-8">2</span>  <span className="text-orange-600">"data"</span>: {'{'}</div>
                    <div className="flex"><span className="text-gray-400 w-8">3</span>    <span className="text-orange-600">"id"</span>: <span className="text-blue-600">{apiResponse.data.id}</span>,</div>
                    <div className="flex"><span className="text-gray-400 w-8">4</span>    <span className="text-orange-600">"firstName"</span>: <span className="text-green-600">"{apiResponse.data.firstName}"</span>,</div>
                    <div className="flex"><span className="text-gray-400 w-8">5</span>    <span className="text-orange-600">"lastName"</span>: <span className="text-green-600">"{apiResponse.data.lastName}"</span>,</div>
                    <div className="flex"><span className="text-gray-400 w-8">6</span>    <span className="text-orange-600">"email"</span>: <span className="text-green-600">"{apiResponse.data.email}"</span>,</div>
                    <div className="flex"><span className="text-gray-400 w-8">7</span>    <span className="text-orange-600">"password"</span>: <span className="text-purple-600">null</span>,</div>
                    <div className="flex"><span className="text-gray-400 w-8">8</span>    <span className="text-orange-600">"userType"</span>: <span className="text-green-600">"{apiResponse.data.userType}"</span>,</div>
                    <div className="flex"><span className="text-gray-400 w-8">9</span>    <span className="text-orange-600">"token"</span>: <span className="text-green-600">"{apiResponse.data.token.substring(0, 80)}...</span>,</div>
                    <div className="flex"><span className="text-gray-400 w-8">10</span>  {'}'},</div>
                    <div className="flex"><span className="text-gray-400 w-8">11</span>  <span className="text-orange-600">"success"</span>: <span className="text-blue-600">true</span>,</div>
                    <div className="flex"><span className="text-gray-400 w-8">12</span>  <span className="text-orange-600">"message"</span>: <span className="text-green-600">"{apiResponse.message}"</span></div>
                    <div className="flex"><span className="text-gray-400 w-8">13</span>{'}'}</div>
                  </div>
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );

  // Signup Page
  const SignupPage = () => (
    <div className="min-h-screen bg-gray-800 p-8">
      <div className="max-w-6xl mx-auto">
        <div className="bg-white rounded-lg shadow-2xl overflow-hidden">
          <BrowserBar url="localhost:8080/FreshFields/signup" />
          
          <div className="bg-gradient-to-br from-green-100 via-emerald-100 to-teal-100 p-12">
            <div className="max-w-2xl mx-auto">
              <div className="bg-white rounded-3xl shadow-2xl overflow-hidden">
                <div className="bg-gradient-to-r from-green-600 to-emerald-700 p-8 text-white text-center">
                  <div className="flex justify-center mb-4">
                    <div className="bg-white/20 p-3 rounded-2xl backdrop-blur-sm">
                      <Leaf className="w-10 h-10" />
                    </div>
                  </div>
                  <h2 className="text-3xl font-bold mb-2">Join FreshFields</h2>
                  <p className="text-green-100">Your journey to farm-fresh goodness starts here</p>
                </div>
                
                <div className="p-8">
                  <div className="mb-4 p-3 bg-blue-50 border border-blue-200 rounded-lg">
                    <button
                      onClick={() => setCurrentPage('postman')}
                      className="text-blue-600 font-semibold hover:underline flex items-center gap-2"
                    >
                      <Code className="w-4 h-4" />
                      View API Documentation (Postman)
                    </button>
                  </div>

                  <div className="grid grid-cols-2 gap-4 mb-4">
                    <div>
                      <label className="block text-sm font-semibold text-gray-700 mb-2">First Name</label>
                      <input
                        type="text"
                        name="firstName"
                        value={formData.firstName}
                        onChange={handleInputChange}
                        className="w-full px-4 py-3 border-2 border-gray-200 rounded-lg focus:border-green-500 focus:outline-none transition-all"
                        placeholder="John"
                      />
                    </div>
                    <div>
                      <label className="block text-sm font-semibold text-gray-700 mb-2">Last Name</label>
                      <input
                        type="text"
                        name="lastName"
                        value={formData.lastName}
                        onChange={handleInputChange}
                        className="w-full px-4 py-3 border-2 border-gray-200 rounded-lg focus:border-green-500 focus:outline-none transition-all"
                        placeholder="Farmer"
                      />
                    </div>
                  </div>

                  <div className="mb-4">
                    <label className="block text-sm font-semibold text-gray-700 mb-2">Email Address</label>
                    <div className="relative">
                      <Mail className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
                      <input
                        type="email"
                        name="email"
                        value={formData.email}
                        onChange={handleInputChange}
                        className="w-full pl-10 pr-4 py-3 border-2 border-gray-200 rounded-lg focus:border-green-500 focus:outline-none transition-all"
                        placeholder="john@example.com"
                      />
                    </div>
                  </div>

                  <div className="mb-4">
                    <label className="block text-sm font-semibold text-gray-700 mb-2">Password</label>
                    <div className="relative">
                      <Lock className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
                      <input
                        type={showPassword ? "text" : "password"}
                        name="password"
                        value={formData.password}
                        onChange={handleInputChange}
                        className="w-full pl-10 pr-12 py-3 border-2 border-gray-200 rounded-lg focus:border-green-500 focus:outline-none transition-all"
                        placeholder="••••••••"
                      />
                      <button
                        type="button"
                        onClick={() => setShowPassword(!showPassword)}
                        className="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600"
                      >
                        {showPassword ? <EyeOff className="w-5 h-5" /> : <Eye className="w-5 h-5" />}
                      </button>
                    </div>
                  </div>

                  <div className="mb-4">
                    <label className="block text-sm font-semibold text-gray-700 mb-2">Confirm Password</label>
                    <div className="relative">
                      <Lock className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
                      <input
                        type={showConfirmPassword ? "text" : "password"}
                        name="confirmPassword"
                        value={formData.confirmPassword}
                        onChange={handleInputChange}
                        className="w-full pl-10 pr-12 py-3 border-2 border-gray-200 rounded-lg focus:border-green-500 focus:outline-none transition-all"
                        placeholder="••••••••"
                      />
                      <button
                        type="button"
                        onClick={() => setShowConfirmPassword(!showConfirmPassword)}
                        className="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600"
                      >
                        {showConfirmPassword ? <EyeOff className="w-5 h-5" /> : <Eye className="w-5 h-5" />}
                      </button>
                    </div>
                  </div>

                  <div className="mb-6">
                    <label className="block text-sm font-semibold text-gray-700 mb-2">I am a:</label>
                    <select
                      name="userType"
                      value={formData.userType}
                      onChange={handleInputChange}
                      className="w-full px-4 py-3 border-2 border-gray-200 rounded-lg focus:border-green-500 focus:outline-none transition-all"
                    >
                      <option value="Customer">Customer</option>
                      <option value="Farmer">Farmer</option>
                      <option value="Vendor">Vendor</option>
                    </select>
                  </div>

                  <button
                    onClick={handleSignup}
                    className="w-full py-4 bg-gradient-to-r from-green-600 to-emerald-700 text-white font-bold rounded-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-300"
                  >
                    Create Account
                  </button>

                  <p className="text-center mt-6 text-gray-600">
                    Already have an account?{' '}
                    <button
                      onClick={() => setCurrentPage('login')}
                      className="text-green-600 font-semibold hover:underline"
                    >
                      Sign In
                    </button>
                  </p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );

  // Login Page
  const LoginPage = () => (
    <div className="min-h-screen bg-gray-800 p-8">
      <div className="max-w-6xl mx-auto">
        <div className="bg-white rounded-lg shadow-2xl overflow-hidden">
          <BrowserBar url="localhost:8080/FreshFields/login" />
          
          <div className="bg-gradient-to-br from-green-100 via-emerald-100 to-teal-100 flex items-center justify-center p-12">
            <div className="bg-white rounded-3xl shadow-2xl max-w-md w-full overflow-hidden">
              <div className="bg-gradient-to-r from-green-700 to-emerald-800 p-8 text-white text-center">
                <div className="flex justify-center mb-4">
                  <div className="bg-white/20 p-3 rounded-2xl backdrop-blur-sm">
                    <Leaf className="w-10 h-10" />
                  </div>
                </div>
                <h2 className="text-3xl font-bold mb-2">Welcome Back!</h2>
                <p className="text-green-100">Log in to access fresh local produce</p>
              </div>
              
              <div className="p-8">
                <div className="mb-4">
                  <label className="block text-sm font-semibold text-gray-700 mb-2">Email Address</label>
                  <div className="relative">
                    <Mail className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
                    <input
                      type="email"
                      name="email"
                      value={formData.email}
                      onChange={handleInputChange}
                      className="w-full pl-10 pr-4 py-3 border-2 border-gray-200 rounded-lg focus:border-green-500 focus:outline-none transition-all"
                      placeholder="john@example.com"
                    />
                  </div>
                </div>

                <div className="mb-4">
                  <label className="block text-sm font-semibold text-gray-700 mb-2">Password</label>
                  <div className="relative">
                    <Lock className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
                    <input
                      type={showPassword ? "text" : "password"}
                      name="password"
                      value={formData.password}
                      onChange={handleInputChange}
                      className="w-full pl-10 pr-12 py-3 border-2 border-gray-200 rounded-lg focus:border-green-500 focus:outline-none transition-all"
                      placeholder="••••••••"
                    />
                    <button
                      type="button"
                      onClick={() => setShowPassword(!showPassword)}
                      className="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600"
                    >
                      {showPassword ? <EyeOff className="w-5 h-5" /> : <Eye className="w-5 h-5" />}
                    </button>
                  </div>
                </div>

                <div className="flex items-center justify-between mb-6">
                  <label className="flex items-center">
                    <input
                      type="checkbox"
                      className="w-4 h-4 text-green-600 border-2 border-gray-300 rounded focus:ring-green-500"
                    />
                    <span className="ml-2 text-sm text-gray-700">Remember me</span>
                  </label>
                  <button
                    type="button"
                    className="text-sm text-green-600 font-semibold hover:underline"
                  >
                    Forgot Password?
                  </button>
                </div>

                <button
                  onClick={handleLogin}
                  className="w-full py-4 bg-gradient-to-r from-green-600 to-emerald-700 text-white font-bold rounded-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-300"
                >
                  Sign In
                </button>

                <p className="text-center mt-6 text-gray-600">
                  New to FreshFields?{' '}
                  <button
                    onClick={() => setCurrentPage('signup')}
                    className="text-green-600 font-semibold hover:underline"
                  >
                    Create an account
                  </button>
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );

  // Dashboard Page
  const DashboardPage = () => (
    <div className="min-h-screen bg-gray-800 p-8">
      <div className="max-w-7xl mx-auto">
        <div className="bg-white rounded-lg shadow-2xl overflow-hidden mb-8">
          <BrowserBar url="localhost:8080/FreshFields/dashboard" />
          
          <div className="bg-gradient-to-br from-emerald-50 via-green-50 to-teal-50">
            <header className="bg-white shadow-md">
              <div className="max-w-7xl mx-auto px-6 py-4">
                <div className="flex items-center justify-between">
                  <div className="flex items-center gap-3">
                    <div className="bg-gradient-to-br from-green-600 to-emerald-700 p-2 rounded-xl">
                      <Leaf className="w-7 h-7 text-white" />
                    </div>
                    <h1 className="text-2xl font-bold bg-gradient-to-r from-green-700 to-emerald-600 bg-clip-text text-transparent">
                      FreshFields
                    </h1>
                  </div>
                  
                  <div className="flex items-center gap-4">
                    <button
                      onClick={() => setCurrentPage('database')}
                      className="px-4 py-2 bg-blue-600 text-white rounded-lg font-
